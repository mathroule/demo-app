apply plugin: 'jacoco'

jacoco {
    toolVersion '0.8.3'
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest'/*, 'createDebugCoverageReport'*/]) {
    group 'verification'

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug/classes", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec',
            'outputs/code_coverage/debugAndroidTest/connected/*coverage.ec'
    ])

    reports {
        html {
            enabled true
        }
        xml {
            enabled true
        }
    }
}

android {
    buildTypes {
        debug.testCoverageEnabled true
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses true
            }
        }
    }
}
